// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("NbpTable", b =>
                {
                    b.Property<string>("No")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("No");

                    b.ToTable("NbpTables");
                });

            modelBuilder.Entity("backend.Models.NbpRate", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("TEXT");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Mid")
                        .HasColumnType("TEXT");

                    b.Property<string>("NbpTableNo")
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.HasIndex("NbpTableNo");

                    b.ToTable("NbpRate");
                });

            modelBuilder.Entity("backend.Models.NbpRate", b =>
                {
                    b.HasOne("NbpTable", "NbpTable")
                        .WithMany("Rates")
                        .HasForeignKey("NbpTableNo");

                    b.Navigation("NbpTable");
                });

            modelBuilder.Entity("NbpTable", b =>
                {
                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
